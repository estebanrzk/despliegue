{
  "hash": "62cf8fcd7c4b11e806cc88e0fc91c30a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Post With Code\"\nauthor: \"Esteban Navarro\"\ndate: \"2024-11-19\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n::: {#0b6eda9f .cell execution_count=1}\n``` {.python .cell-code}\n#importamos librerias\nimport sqlite3\nimport pandas as pd\nimport plotly.express as px\n```\n:::\n\n\nThis is a post with executable code.\n\n::: {#6659dc6d .cell execution_count=2}\n``` {.python .cell-code}\n#conectamos con la base datos\nconn = sqlite3.connect(r\"C:\\Users\\f\\Downloads\\cetav\\progra 3 naib\\sem 3\\Northwind_small.sqlite\")\nconn.close\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n<function Connection.close()>\n```\n:::\n:::\n\n\n::: {#85e83d18 .cell execution_count=3}\n``` {.python .cell-code}\npedidos = pd.read_sql_query(\"SELECT * FROM 'Order'\", conn)\ndetalles_pedidos = pd.read_sql_query(\"SELECT * FROM OrderDetail\", conn)\nempleados = pd.read_sql_query(\"SELECT * FROM 'employee'\", conn)\n1\nclientes = pd.read_sql_query(\"SELECT * FROM 'customer'\", conn)\n#para este dataframe no me interesa su numero asi que solo agrego nombre y id\nshipper = pd.read_sql_query(\"SELECT Id, CompanyName FROM Shipper\", conn)\nproducto = pd.read_sql_query(\"SELECT Id, ProductName, categoryId, UnitPrice FROM Product\", conn)\ncategoria = pd.read_sql_query(\"SELECT Id, CategoryName FROM category\", conn)\n```\n:::\n\n\n::: {#b8c1f4a2 .cell execution_count=4}\n``` {.python .cell-code}\n #empiezo a unir los dataframes que necesito, metodo usado es df1.merge(df2, left_on='col1', right_on='col2')\n\ntabla_unificada1 = pedidos.merge(detalles_pedidos, left_on='Id', right_on='OrderId', suffixes=('_pedido', 'Detalle'))\n\ntabla_unificada2 = tabla_unificada1.merge(empleados, left_on='EmployeeId', right_on='Id', suffixes=('', 'Empleado'))\n\ntabla_unificada3 = tabla_unificada2.merge(producto, left_on='ProductId', right_on='Id', suffixes=('', 'Producto'))\n\ntabla_unificada4 = tabla_unificada3.merge(categoria, left_on='CategoryId', right_on='Id', suffixes=('', 'Categoria'))\n\ntabla_unificada5 = tabla_unificada4.merge(clientes, left_on='CustomerId', right_on='Id', suffixes=('', 'Cliente'))\n\nNorthwind_unificada = tabla_unificada5.merge(shipper, left_on='ShipVia', right_on='Id', suffixes=('', 'Shipper'))\n\n\n\nNorthwind_unificada.head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id_pedido</th>\n      <th>CustomerId</th>\n      <th>EmployeeId</th>\n      <th>OrderDate</th>\n      <th>RequiredDate</th>\n      <th>ShippedDate</th>\n      <th>ShipVia</th>\n      <th>Freight</th>\n      <th>ShipName</th>\n      <th>ShipAddress</th>\n      <th>...</th>\n      <th>ContactTitle</th>\n      <th>AddressCliente</th>\n      <th>CityCliente</th>\n      <th>RegionCliente</th>\n      <th>PostalCodeCliente</th>\n      <th>CountryCliente</th>\n      <th>Phone</th>\n      <th>Fax</th>\n      <th>IdShipper</th>\n      <th>CompanyNameShipper</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10248</td>\n      <td>VINET</td>\n      <td>5</td>\n      <td>2012-07-04</td>\n      <td>2012-08-01</td>\n      <td>2012-07-16</td>\n      <td>3</td>\n      <td>32.38</td>\n      <td>Vins et alcools Chevalier</td>\n      <td>59 rue de l'Abbaye</td>\n      <td>...</td>\n      <td>Accounting Manager</td>\n      <td>59 rue de l'Abbaye</td>\n      <td>Reims</td>\n      <td>Western Europe</td>\n      <td>51100</td>\n      <td>France</td>\n      <td>26.47.15.10</td>\n      <td>26.47.15.11</td>\n      <td>3</td>\n      <td>Federal Shipping</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10248</td>\n      <td>VINET</td>\n      <td>5</td>\n      <td>2012-07-04</td>\n      <td>2012-08-01</td>\n      <td>2012-07-16</td>\n      <td>3</td>\n      <td>32.38</td>\n      <td>Vins et alcools Chevalier</td>\n      <td>59 rue de l'Abbaye</td>\n      <td>...</td>\n      <td>Accounting Manager</td>\n      <td>59 rue de l'Abbaye</td>\n      <td>Reims</td>\n      <td>Western Europe</td>\n      <td>51100</td>\n      <td>France</td>\n      <td>26.47.15.10</td>\n      <td>26.47.15.11</td>\n      <td>3</td>\n      <td>Federal Shipping</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10248</td>\n      <td>VINET</td>\n      <td>5</td>\n      <td>2012-07-04</td>\n      <td>2012-08-01</td>\n      <td>2012-07-16</td>\n      <td>3</td>\n      <td>32.38</td>\n      <td>Vins et alcools Chevalier</td>\n      <td>59 rue de l'Abbaye</td>\n      <td>...</td>\n      <td>Accounting Manager</td>\n      <td>59 rue de l'Abbaye</td>\n      <td>Reims</td>\n      <td>Western Europe</td>\n      <td>51100</td>\n      <td>France</td>\n      <td>26.47.15.10</td>\n      <td>26.47.15.11</td>\n      <td>3</td>\n      <td>Federal Shipping</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10249</td>\n      <td>TOMSP</td>\n      <td>6</td>\n      <td>2012-07-05</td>\n      <td>2012-08-16</td>\n      <td>2012-07-10</td>\n      <td>1</td>\n      <td>11.61</td>\n      <td>Toms Spezialitäten</td>\n      <td>Luisenstr. 48</td>\n      <td>...</td>\n      <td>Marketing Manager</td>\n      <td>Luisenstr. 48</td>\n      <td>Münster</td>\n      <td>Western Europe</td>\n      <td>44087</td>\n      <td>Germany</td>\n      <td>0251-031259</td>\n      <td>0251-035695</td>\n      <td>1</td>\n      <td>Speedy Express</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10249</td>\n      <td>TOMSP</td>\n      <td>6</td>\n      <td>2012-07-05</td>\n      <td>2012-08-16</td>\n      <td>2012-07-10</td>\n      <td>1</td>\n      <td>11.61</td>\n      <td>Toms Spezialitäten</td>\n      <td>Luisenstr. 48</td>\n      <td>...</td>\n      <td>Marketing Manager</td>\n      <td>Luisenstr. 48</td>\n      <td>Münster</td>\n      <td>Western Europe</td>\n      <td>44087</td>\n      <td>Germany</td>\n      <td>0251-031259</td>\n      <td>0251-035695</td>\n      <td>1</td>\n      <td>Speedy Express</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 57 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#c3bcea11 .cell execution_count=5}\n``` {.python .cell-code}\n #Creo dataframes con las columnas especificas que necesito para el posterior graficado de los datos\ntabla_ventas = Northwind_unificada[['Id_pedido', 'UnitPrice', 'ProductName', 'CategoryName', 'Quantity']].copy()\ntabla_ventas.loc[:, 'Total'] = tabla_ventas['UnitPrice'] * tabla_ventas['Quantity']\n\n# Mostrar las primeras filas para verificar\ntabla_ventas.head(5)\n\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id_pedido</th>\n      <th>UnitPrice</th>\n      <th>ProductName</th>\n      <th>CategoryName</th>\n      <th>Quantity</th>\n      <th>Total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10248</td>\n      <td>14.0</td>\n      <td>Queso Cabrales</td>\n      <td>Dairy Products</td>\n      <td>12</td>\n      <td>168.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10248</td>\n      <td>9.8</td>\n      <td>Singaporean Hokkien Fried Mee</td>\n      <td>Grains/Cereals</td>\n      <td>10</td>\n      <td>98.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10248</td>\n      <td>34.8</td>\n      <td>Mozzarella di Giovanni</td>\n      <td>Dairy Products</td>\n      <td>5</td>\n      <td>174.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10249</td>\n      <td>18.6</td>\n      <td>Tofu</td>\n      <td>Produce</td>\n      <td>9</td>\n      <td>167.4</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10249</td>\n      <td>42.4</td>\n      <td>Manjimup Dried Apples</td>\n      <td>Produce</td>\n      <td>40</td>\n      <td>1696.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#754a568e .cell execution_count=6}\n``` {.python .cell-code}\n # importo librerias\nimport plotly.express as px\nimport plotly.io as pio\n\n\n #saco las columnas que necesito y las copio para evitar danar el dataframe que hice\ntabla_ventas[['ProductName', 'Total']].copy()\n\n#agrupo por 'ProductName' y sumar el total de ventas, seleccionando el top 10\ntop_10_productos = tabla_ventas.groupby('ProductName')['Total'].sum().nlargest(10).reset_index()\n\n# creo el grafico basico ocon las dos columnas\nfig = px.bar(top_10_productos, x='ProductName', y='Total',\n             hover_data=['Total'], labels={'Total': ''}, height=500,\n             title=\"Top 10 Ventas Totales por Producto\")\n\n# Aagrego las etiquetas de datos\nfig.update_traces(texttemplate='%{y:.2f}', textposition='outside')\n\n# elijo azul para las 3 primeras columnas y gris para el resto para mostrar\ncolors = ['#ADD8E6' if i < 3 else '#D3D3D3' for i in range(len(top_10_productos))]\nfig.update_traces(marker=dict(color=colors))\n\n# elimino la barra de datos del eje y\nfig.update_layout(yaxis=dict(showticklabels=False))\n\n# centro el titulo, tambien quito la leyenda de los productos\nfig.update_layout(title={'text': \"Top 10 Ventas Totales por Producto\", 'x':0.5, 'xanchor': 'center'},\n                  showlegend=False)\n\n# Mostrar el gráfico\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"9561d342-5eb6-4d46-80a4-a20386ce8bcf\" class=\"plotly-graph-div\" style=\"height:500px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9561d342-5eb6-4d46-80a4-a20386ce8bcf\")) {                    Plotly.newPlot(                        \"9561d342-5eb6-4d46-80a4-a20386ce8bcf\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"ProductName=%{x}\\u003cbr\\u003e=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[\"#ADD8E6\",\"#ADD8E6\",\"#ADD8E6\",\"#D3D3D3\",\"#D3D3D3\",\"#D3D3D3\",\"#D3D3D3\",\"#D3D3D3\",\"#D3D3D3\",\"#D3D3D3\"],\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"outside\",\"x\":[\"C\\u00f4te de Blaye\",\"Th\\u00fcringer Rostbratwurst\",\"Raclette Courdavault\",\"Tarte au sucre\",\"Camembert Pierrot\",\"Manjimup Dried Apples\",\"Gnocchi di nonna Alice\",\"Alice Mutton\",\"Carnarvon Tigers\",\"R\\u00f6ssle Sauerkraut\"],\"xaxis\":\"x\",\"y\":[141552.2,87736.40000000001,75361.0,49827.9,47872.0,44742.6,42841.2,34195.2,31987.5,24972.0],\"yaxis\":\"y\",\"type\":\"bar\",\"texttemplate\":\"%{y:.2f}\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"ProductName\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"\"},\"showticklabels\":false},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Top 10 Ventas Totales por Producto\",\"x\":0.5,\"xanchor\":\"center\"},\"barmode\":\"relative\",\"height\":500,\"showlegend\":false},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('9561d342-5eb6-4d46-80a4-a20386ce8bcf');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script type=\"text/javascript\">\nwindow.PlotlyConfig = {MathJaxConfig: 'local'};\nif (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\nif (typeof require !== 'undefined') {\nrequire.undef(\"plotly\");\nrequirejs.config({\n    paths: {\n        'plotly': ['https://cdn.plot.ly/plotly-2.35.0.min']\n    }\n});\nrequire(['plotly'], function(Plotly) {\n    window._Plotly = Plotly;\n});\n}\n</script>\n\n"
      ]
    }
  }
}